apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'
group='com.heaton.aicareles'

android {
    compileSdkVersion 28

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 28
        versionCode 2
//        V主版本号子版本号阶段版本号_日期版本号加希腊字母版本号.比如V1_1_2_161209_beta.
        versionName "1.0.1"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

//    //所有的资源须以baselib_开头
//    resourcePrefix 'baselib_'

    lintOptions {
        abortOnError false
    }

    /*task makeJar(type: Copy) {
        //删除存在的
        delete 'build/libs/baselib.jar'
        //设置拷贝的文件
        from('build/intermediates/intermediate-jars/debug')
        //打进jar包后的文件目录
        into('libs/')
        //将classes.jar放入build/libs/目录下
        //include ,exclude参数来设置过滤
        //（我们只关心classes.jar这个文件）
        include('classes.jar')
        //重命名
        rename ('classes.jar', 'baselib.jar')
    }
    makeJar.dependsOn(build)*/

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support:recyclerview-v7:28.0.0'

    implementation 'com.squareup.okhttp3:okhttp:4.0.1'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.0.1'
    implementation 'com.squareup.retrofit2:converter-gson:2.4.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.3.0'
    api "io.reactivex.rxjava2:rxandroid:2.1.1"
    api "io.reactivex.rxjava2:rxjava:2.2.10"
    api 'com.squareup.retrofit2:retrofit:2.4.0'
    api 'com.alibaba:fastjson:1.2.49'
    api 'com.google.code.gson:gson:2.8.6'
    implementation 'com.orhanobut:logger:2.2.0'
    implementation 'com.jakewharton:butterknife:8.8.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'

}

//def SDK_BASENAME = "baselib"
//def SDK_VERSION = "_V1.0"
//def sdkDestinationPath = "libs"
//def zipFile = file('build/intermediates/intermediate-jars/release/classes.jar')
//
//task deleteBuild(type: Delete) {
//    delete sdkDestinationPath + SDK_BASENAME + SDK_VERSION + ".jar"
//}
//
//task makeJar(type: Jar) {
//    from zipTree(zipFile)
//    from fileTree(dir: 'src/main',includes: ['assets/**'])//将assets目录打入jar包
//    baseName = SDK_BASENAME + SDK_VERSION
//    destinationDir = file(sdkDestinationPath)
//}
//
//makeJar.dependsOn(deleteBuild, build)
